dnl Process this file with autoconf to produce a configure script.

AC_INIT(Boxi, 0.1.0, http://boxi.sourceforge.net)

touch install-sh
AC_CANONICAL_SYSTEM
test -s install-sh || rm install-sh

AM_INIT_AUTOMAKE(boxi, 0.1.0)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

if test -z "$CFLAGS"; then
	export CFLAGS="-g -O0"
fi

if test -z "$CXXFLAGS"; then
	export CXXFLAGS="-g -O0"
fi

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_CHECK_HEADERS([execinfo.h netinet/in.h regex.h sys/types.h sys/xattr.h])

AC_PROG_CPP
AC_PROG_CXX

if test "x$GXX" = "xyes"; then
  # Use -Wall if we have gcc. This gives better warnings
  AC_SUBST([CXXFLAGS_STRICT], ['-Wall -Wundef'])

  # Use -rdynamic if we have gcc, but not mingw. This is needed for backtrace
  case $target_os in
    mingw*) ;;
    *)
	dnl AC_SUBST([LDADD_RDYNAMIC], ['-rdynamic'])
	LDFLAGS="$LDFLAGS -rdynamic"
	;;
  esac
fi

dnl GETTEXT_PACKAGE=boxi
dnl AC_SUBST(GETTEXT_PACKAGE)
dnl AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Package name for gettext])

dnl Languages which your application supports
dnl ALL_LINGUAS=""
dnl AM_GLIB_GNU_GETTEXT

AM_PROG_LIBTOOL
AM_GNU_GETTEXT

AM_OPTIONS_WXCONFIG
AM_PATH_WXCONFIG(2.3.2, wxWin=1)

if test "$wxWin" != 1; then
AC_MSG_ERROR([
	wxWindows must be installed on your system.

	Please check that wx-config is in path, the directory
	where wxWindows libraries are installed (returned by
	'wx-config --libs' or 'wx-config --static --libs' command)
	is in LD_LIBRARY_PATH or equivalent variable and
	wxWindows version is 2.3.2 or above.
	])
else
       dnl Quick hack until wx-config does it
       ac_save_LIBS=$LIBS
       ac_save_CXXFLAGS=$CXXFLAGS
       LIBS=$WX_LIBS
       CXXFLAGS=$WX_CXXFLAGS
       AC_LANG_SAVE
       AC_LANG_CPLUSPLUS
       AC_TRY_LINK([#include <wx/wx.h>],
       [wxString test=""],
       ,[])
       AC_LANG_RESTORE
       LIBS=$ac_save_LIBS
       CXXFLAGS=$ac_save_CXXFLAGS
fi

dnl Checks for libraries.

## Check for zlib
AC_CHECK_LIB([z], [zlibVersion],, [AC_MSG_ERROR([[cannot find zlib]])])

## Check for Berkely DB. Restrict to certain versions
AX_PATH_BDB(, [
  LIBS="$BDB_LIBS $LIBS"
  LDFLAGS="$BDB_LDFLAGS $LDFLAGS"
  CPPFLAGS="$CPPFLAGS $BDB_CPPFLAGS"

  AX_COMPARE_VERSION([$BDB_VERSION],[ge],[4.1],,
    [AX_COMPARE_VERSION([$BDB_VERSION],[lt],[2],,
      [AC_MSG_ERROR([[only Berkely DB versions 1.x or at least 4.1 are currently supported]])]
      )]
  )
  AX_SPLIT_VERSION([BDB_VERSION], [$BDB_VERSION])
])

# Check for OpenSSL
AX_CHECK_SSL(, [AC_MSG_ERROR([[OpenSSL is not installed but is required]])])

AM_PATH_CPPUNIT(1.10.0,,[AC_MSG_ERROR([[CppUnit 1.10 or higher is required]])])
CXXFLAGS="$CXXFLAGS $CPPUNIT_CFLAGS"
LIBS="$LIBS $CPPUNIT_LIBS"

# Check for regular expression libraries
AC_CHECK_HEADER([regex.h], [have_regex_h=yes])

if test "$have_regex_h" = "yes"; then
  AC_DEFINE([HAVE_REGEX_H], [1], [Define to 1 if regex.h is available])
else
  AC_CHECK_HEADER([pcreposix.h], [have_pcreposix_h=yes])
fi

if test "$have_pcreposix_h" = "yes"; then
  AC_DEFINE([PCRE_STATIC], [1], [Box Backup always uses static PCRE])
  AC_SEARCH_LIBS([regcomp], ["pcreposix -lpcre"],,[have_pcreposix_h=no_regcomp])
fi

if test "$have_pcreposix_h" = "yes"; then
  AC_DEFINE([HAVE_PCREPOSIX_H], [1], [Define to 1 if pcreposix.h is available])
fi

if test "$have_regex_h" = "yes" -o "$have_pcreposix_h" = "yes"; then
  have_regex_support=yes
  AC_DEFINE([HAVE_REGEX_SUPPORT], [1], [Define to 1 if regular expressions are supported])
else
  AC_MSG_ERROR([[No supported regular expression engine is installed]])
fi

# extract boxbackup in release build
if ! (
	set -e
	cd boxbackup
	./bootstrap # PATCH IN RELEASE
	export CC CXX CXXFLAGS LDFLAGS LIBS
	BOX_CONFIG_OPTS="$ax_check_ssl_headers $ax_check_ssl_lib
		--host=$host_alias --target=$target_alias"
	echo "Configuring Box Backup with" $BOX_CONFIG_OPTS
	./configure $BOX_CONFIG_OPTS
); then
	echo "Failed to configure Box Backup, aborting!"
	exit 1
fi

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale", [Package local directory])
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale", [Package local directory])
fi

dnl Set PACKAGE SOURCE DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`

dnl Set PACKAGE PREFIX
if test "x${prefix}" = "xNONE"; then
  packageprefix=${ac_default_prefix}
else
  packageprefix=${prefix}
fi

dnl Set PACKAGE DATA & DOC DIR
packagedatadir=share
packagedocdir=doc/${PACKAGE}

dnl Set PACKAGE DIRS in config.h.
packagepixmapsdir=${packagedatadir}/pixmaps
packagehelpdir=${packagedatadir}/help
packagemenudir=${packagedatadir}

dnl Subst PACKAGE_DATA_DIR.
NO_PREFIX_PACKAGE_DATA_DIR="${packagedatadir}"
AC_SUBST(NO_PREFIX_PACKAGE_DATA_DIR)
PACKAGE_DATA_DIR="${packageprefix}/${packagedatadir}"
AC_SUBST(PACKAGE_DATA_DIR)

dnl Subst PACKAGE_DOC_DIR.
NO_PREFIX_PACKAGE_DOC_DIR="${packagedocdir}"
AC_SUBST(NO_PREFIX_PACKAGE_DOC_DIR)
PACKAGE_DOC_DIR="${packageprefix}/${packagedocdir}"
AC_SUBST(PACKAGE_DOC_DIR)

dnl Subst PACKAGE_PIXMAPS_DIR.
NO_PREFIX_PACKAGE_PIXMAPS_DIR="${packagepixmapsdir}"
AC_SUBST(NO_PREFIX_PACKAGE_PIXMAPS_DIR)
PACKAGE_PIXMAPS_DIR="${packageprefix}/${packagepixmapsdir}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Subst PACKAGE_HELP_DIR.
NO_PREFIX_PACKAGE_HELP_DIR="${packagehelpdir}"
AC_SUBST(NO_PREFIX_PACKAGE_HELP_DIR)
PACKAGE_HELP_DIR="${packageprefix}/${packagehelpdir}"
AC_SUBST(PACKAGE_HELP_DIR)

dnl Subst PACKAGE_MENU_DIR.
NO_PREFIX_PACKAGE_MENU_DIR="${packagemenudir}"
AC_SUBST(NO_PREFIX_PACKAGE_MENU_DIR)
PACKAGE_MENU_DIR="${packageprefix}/${packagemenudir}"
AC_SUBST(PACKAGE_MENU_DIR)

AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${packageprefix}/${packagedatadir}")
AC_DEFINE_UNQUOTED(PACKAGE_DOC_DIR, "${packageprefix}/${packagedocdir}")
AC_DEFINE_UNQUOTED(PACKAGE_PIXMAPS_DIR, "${packageprefix}/${packagepixmapsdir}")
AC_DEFINE_UNQUOTED(PACKAGE_HELP_DIR, "${packageprefix}/${packagehelpdir}")
AC_DEFINE_UNQUOTED(PACKAGE_MENU_DIR, "${packageprefix}/${packagemenudir}")
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")

dnl PKG_CHECK_MODULES(x, cppunit)
dnl AC_SUBST(x_CFLAGS)
dnl AC_SUBST(x_LIBS)

AC_OUTPUT([
Makefile
po/Makefile
include/Makefile
intl/Makefile
src/Makefile
])

